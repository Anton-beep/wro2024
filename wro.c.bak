#pragma config(Sensor, S1,     ,               sensorLightActive)
#pragma config(Sensor, S2,     ,               sensorLightActive)
#pragma config(Sensor, S3,     ,               sensorEV3_Color, modeEV3Color_RGB_Raw)
#pragma config(Sensor, S4,     ,               sensorEV3_Color, modeEV3Color_RGB_Raw)
#pragma config(Motor,  motorA,          leftMotor,     tmotorEV3_Large, openLoop, encoder)
#pragma config(Motor,  motorB,          rightMotor,    tmotorEV3_Large, openLoop, encoder)
#pragma config(Motor,  motorC,           ,             tmotorEV3_Large, openLoop, encoder)
#pragma config(Motor,  motorD,           ,             tmotorEV3_Medium, openLoop, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#include "include/includes.h"
#include "logic/main_logic.c"
#include "logic/define_func.c"

task main()
{
	// define everything
	motor[motorA] = 0;
	motor[motorB] = 0;
	motor[motorC] = 0;
	motor[motorD] = 0;
	int r, g, b;
	getColorRawRGB(S3, r, g, b);
	getColorRawRGB(S4, r, g, b);
	sleep(200);

	// ??????N????±?????°N?N? N?????N??°N???N?N? ??N??µ??N? ??????N??°?»???·?°N?????

	float startExecution = nPgmTime;

	float now = getBatteryVoltage();
	if (now < 7.8)
	{
		playSound(soundException);
	}
	eraseDisplay();
	displayCenteredBigTextLine(5, "voltage");
	displayCenteredBigTextLine(10, "%f", now);

	defineForLogic();

	defineMain();

#if RUN_ONLY_TEST_FUNCTION == 1
	testFunc();
#else
	mainLogic();
	sleep(3000);
#endif

	stopAllTasks();

	eraseDisplay();
	displayCenteredBigTextLine(5, "seconds");
	displayCenteredBigTextLine(10, "%f", (float)(nPgmTime - startExecution) / 1000);
	flushButtonMessages();
	waitForButtonPress();
}
